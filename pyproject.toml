[tool.bandit]
exclude_dirs = [".venv"]
skips = ["B101"]

[tool.black]
includes = "src"
line_length = 120

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "def __str__",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "if self.debug:",
    "if self.verbose:",
    "pragma: no cover"
]
show_missing = true

[tool.coverage.run]
branch = true
source = ["src"]
omit = [
  "*__init__*",
  "*__version__*",
  "*/thirdparty/**"
]

[tool.isort]
include_trailing_comma = true
known_first_party = ["lab"]
line_length = 120
multi_line_output = 3
profile = "black"
skip_gitignore = true

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
warn_unused_ignores = false
show_error_codes = true
check_untyped_defs = true
no_implicit_optional = true
mypy_path = ['src']

[[tool.mypy.overrides]]
module = "lab.*"
ignore_missing_imports = false
disallow_untyped_defs = true

[tool.nx]
autoActivate = true

[tool.poetry]
name = "lab"
description = ""
version = "0.0.0"
authors = ["Tony Burns <tony@tonyburns.net>"]
license = "MIT"
classifiers = ["Private :: Do Not Upload"]
include = [
    { path = "src/**/py.typed" },
    { path = "src/**/*.pyi" },
    { path = "docs/examples", format = "sdist" },
    { path = "tests", format = "sdist" },
    { path = "docs-offline/**/*", format = "sdist" },
]
packages = [{ include = "lab", from="src" }]

[tool.poetry.dependencies]
python = ">=3.11.0,<3.12"

accelerate = "^0.25.0"
aiosqlite = "^0.19.0"
albumentations = "^1.3.1"
arxiv = "^2.1.0"
astropy = "^5.3.4"
attrs = "^23.1"
basicsr = "^1.4.2"
beautifulsoup4 = "^4.12.2"
bitsandbytes = "<0.41.0"
blendmodes = "^2023"
bokeh = "^3.3.2"
boto3 = "^1.34.6"
chainlit = "^0.7.700"
chromadb = "^0.4.21"
clean-fid = "^0.1.35"
click = "^8.1"
colorama = "^0.4.6"
dask = {extras = ["distributed"], version = "^2023.12.1"}
datasets = "^2.15.0"
deepmerge = "^1.1.1"
diffusers = {extras = ["torch"], version = "^0.24.0"}
docarray = "^0.39.1"
dvc = "^3.35.0"
einops = "^0.7.0"
embedchain = "^0.1.40"
evaluate = "^0.4.1"
exllamav2 = "^0.0.11"
faiss-cpu = { platform = "darwin", version = "^1.7.4" }
faiss-gpu = [
  { platform = "linux", version = "^1.7.2" },
  { platform = "windows", version = "^1.7.2" }
]
faker = "^21.0.0"
fastapi = "^0.100.0"
feature-engine = "^1.6.2"
featuretools = "^1.28.0"
gensim = "^4.3.2"
gfpgan = "^1.3.8"
gitpython = "^3.1.40"
gradio = "^4.11.0"
hqq = "^0.1.1.post1"
httpx = "^0.24.0"
huggingface-hub = {extras = ["cli", "torch"], version = "^0.20.1"}
imageio = "^2.33.1"
imageio-ffmpeg = "^0.4.9"
importlib-metadata = "^6.11.0"
inflection = "^0.5.1"
invisible-watermark = "^0.2.0"
ipykernel = "^6.26.0"
jinja2 = "^3.1.2"
joblib = "^1.3.2"
jq = "^1.6.0"
jupyterlab = "^4.0.8"
kornia = "^0.7.0"
langchain = "^0.0.336"
langchain-experimental = "^0.0.36"
langserve = {extras = ["all"], version = "^0.0.37"}
lark = "^1.1.8"
lightning = "^2.1.3"
llama-cpp-python = "^0.2.24"
llama-index = "^0.8.65"
matplotlib = "^3.8.1"
networkx = "^3.2.1"
nltk = "^3.8.1"
noise = "^1.2.2"
numpy = "^1.25.2"
omegaconf = "^2.3.0"
onnxruntime = "^1.16.3"
open-clip-torch = "^2.23.0"
openai = "^1.6.0"
opencv-python = "^4.8.1.78"
opensimplex = "^0.4.5"
optimum = "^1.16.1"
optuna = "^3.5.0"
ortools = "^9.8.3296"
pandas = "^2.1.2"
papermill = "^2.5.0"
peft = "^0.7.1"
piexif = "^1.1.3"
Pillow = "^10.1.0"
platformdirs = "^3.11"
plotly = "^5.18.0"
polars = "^0.20.2"
psutil = "^5.9.7"
psycopg2 = "^2.9.9"
pydantic = "^2.5.2"
pypdf = "^3.17.3"
pyspark = "^3.5.0"
python-dotenv = "^1.0.0"
pyyaml = "^6.0.1"
realesrgan = "^0.3.0"
requests = "^2.31.0"
resize-right = "^0.0.2"
rich = "^13.6"
rich-click = "^1.7"
rouge-score = "^0.1.2"
safetensors = "^0.4.1"
scikit-image = "^0.22.0"
scikit-learn = "^1.3.2"
scipy = "^1.11.3"
scrapy = "^2.11.0"
seaborn = "^0.11.0"
sentence-transformers = "^2.2.2"
sentencepiece = "^0.1.99"
simpy = "^4.1.1"
spacy = "^3.7.2"
statsmodels = "^0.14.0"
streamlit = "^1.29.0"
streamlit-drawable-canvas = "^0.9.3"
sympy = "^1.12"
textblob = "^0.17.1"
tiktoken = "^0.4.0"
timm = "^0.9.12"
tokenizers = "^0.15.0"
tomesd = "^0.1.3"
torch = [
  { platform = "darwin", version = "^2.1.2", source = "pypi" },
  { platform = "linux", version = "^2.1.2", source = "pytorch-cu118" },
  { platform = "windows", version = "^2.1.2", source = "pytorch-cu118" }
]
torchdiffeq = "^0.2.3"
torchmetrics = "^1.2.1"
torchsde = "^0.2.6"
torchvision = [
  { platform = "darwin", version = "^0.16.2", source = "pypi" },
  { platform = "linux", version = "^0.16.2", source = "pytorch-cu118" },
  { platform = "windows", version = "^0.16.2", source = "pytorch-cu118" }
]
tsfresh = "^0.20.1"
tqdm = "^4.66.1"
transformers = "^4.36.2"
trl = "^0.7.4"
typing-extensions = "^4.8"
unstructured = "^0.11.6"
wandb = "^0.16.1"
webdataset = "^0.2.86"
xgboost = "^2.0.3"
ydata-profiling = "^4.6.3"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.5"
black = {extras = ["jupyter"], version = "^23.11.0"}
bump2version = "^1.0.1"
cloudflare = "^2.14.3"
flake8 = "^6.1.0"
isort = "^5.12.0"
jupytext = "^1.15.2"
mypy = "^1.6.1"
mypy-boto3 = "^1.34.6"
pre-commit = "^3.5.0"
pre-commit-hooks = "^4.5.0"
pycln = "^2.3.0"
pylint = "^3.0.2"
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-html = "3.2.0"
pytest-sugar = "0.9.7"
time-machine = "^2.13.0"
types-setuptools = "^68.2.0.0"

[[tool.poetry.source]]
name = "pypi"
priority = "primary"

[[tool.poetry.source]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.pylint.basic]
good-names="i,j,x,y,z,x1,y1,z1,x2,y2,z2,cv,df,dx,dy,dz,w,h,c,b,g,qa,q,a"
max-args=8

[tool.pylint.design]
max-locals=20

[tool.pylint.format]
max-line-length=120

[tool.pylint.main]
load-plugins=["pylint.extensions.docparams"]

[tool.pylint.messages_control]
disable=[
  "import-error",
  "missing-module-docstring",
  "suppressed-message",
  "too-few-public-methods",
  "too-many-instance-attributes",
  "unused-import",
  "wrong-import-order"
]

[tool.pylint.miscellaneous]
notes=["XXX"]

[tool.pylint.parameter_documentation]
accept-no-param-doc = false
accept-no-raise-doc = false
accept-no-return-doc = false
accept-no-yields-doc = false
default-docstring-type = "google"

[tool.pylint.similarities]
min-similarity-lines=10

[tool.pytest]
asyncio_mode = "auto"
addopts = [
    '--cov',
    "--cov-report html:'coverage/src/lab/html'",
    "--cov-report xml:'coverage/src/lab/coverage.xml'",
    "--html='reports/src/lab/unittests/html/index.html'",
    "--junitxml='reports/src/lab/unittests/junit.xml'",
    '-ra',
    '--showlocals',
    '--strict-markers',
    '--ignore=docs/conf.py',
    '--ignore=ci',
    '--ignore=.eggs',
    '--doctest-modules',
    '--doctest-glob=\*.rst',
    '--tb=short',
]
markers = [
    "integration_test: marks tests as slow integration tests (deselect with '-m \"not integration_test\"')",
]
norecursedirs=[
    '.git',
    '.tox',
    '.env',
    'data',
    'docs',
    'dist',
    'build',
    'migrations',
    'docker',
    'config',
    'models',
    'notebooks',
    'references'
]
python_files = ['test_*.py']
testpaths = ["tests"]
